enum LINK_TYPE {
    youtube
    charity
    newspapers
    telegram
}

enum AREA_TYPE {
    organizations
    persons
}

type Link {
    id: String
    type: LINK_TYPE!
    titlerus: String
    titleeng: String
    description: String
    foto: String
    link: String
}

type Tag {
    key: String!
    label: String!
    data: String!
    icon: String!
    area: AREA_TYPE
    children: [Tag]
}

scalar DateTime

interface ReputationObject {
    _id: String!
    titlerus: String
    titleeng: String!
    description: String!
    tag: [String]!
    tags: [Tag]!
    rating: Int
    foto: String
}

type Comment {
    id: String
    reputationObjectId: String
    parentId: String
    comment: String
    createdAt: DateTime
}

type Person implements ReputationObject {
    _id: String!
    titlerus: String
    titleeng: String!
    description: String!
    tag: [String]!
    tags: [Tag]!
    rating: Int
    foto: String
    dob: String
    gender: String
}

type Organization {
    _id: String!
    titlerus: String
    titleeng: String!
    description: String!
    tag: [String]!
    tags: [Tag]!
    rating: Int
    foto: String
}

input Filters {
    tags: [String]
    title: String
}

input LazyLoadEvent {
    sortField: String
    sortOrder: String    
    filters: Filters
    first: Int!
    rows: Int!
}

type Profile {
    login: String
    nickname: String
    info: String
}

input ProfileInput {
    login: String
    nickname: String
    info: String
}

type Mutation {
  addProfile(nickname: String): Profile
  updateProfile(profile: ProfileInput): Profile
}